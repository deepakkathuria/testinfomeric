{"ast":null,"code":"import { startOfMonth, eachDayOfInterval, endOfMonth, subMonths, format, getYear, addMonths, getDay, isSameDay, startOfWeek, isSameWeek, setDay } from 'date-fns';\nimport React, { useContext, useState, useEffect } from 'react';\nimport { enUS } from 'date-fns/locale';\nvar MonthlyCalendarContext = /*#__PURE__*/React.createContext({});\n\nvar useMonthlyCalendar = function useMonthlyCalendar() {\n  return useContext(MonthlyCalendarContext);\n};\n\nvar MonthlyCalendar = function MonthlyCalendar(_ref) {\n  var locale = _ref.locale,\n      currentMonth = _ref.currentMonth,\n      onCurrentMonthChange = _ref.onCurrentMonthChange,\n      children = _ref.children;\n  var monthStart = startOfMonth(currentMonth);\n  var days = eachDayOfInterval({\n    start: monthStart,\n    end: endOfMonth(monthStart)\n  });\n  return React.createElement(MonthlyCalendarContext.Provider, {\n    value: {\n      days: days,\n      locale: locale,\n      onCurrentMonthChange: onCurrentMonthChange,\n      currentMonth: monthStart\n    }\n  }, children);\n};\n\nvar MonthlyNav = function MonthlyNav() {\n  var _useMonthlyCalendar = useMonthlyCalendar(),\n      locale = _useMonthlyCalendar.locale,\n      currentMonth = _useMonthlyCalendar.currentMonth,\n      onCurrentMonthChange = _useMonthlyCalendar.onCurrentMonthChange;\n\n  return React.createElement(\"div\", {\n    className: \"rc-flex rc-justify-end rc-mb-4\"\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return onCurrentMonthChange(subMonths(currentMonth, 1));\n    },\n    className: \"rc-cursor-pointer\"\n  }, \"Previous\"), React.createElement(\"div\", {\n    className: \"rc-ml-4 rc-mr-4 rc-w-32 rc-text-center\",\n    \"aria-label\": \"Current Month\"\n  }, format(currentMonth, getYear(currentMonth) === getYear(new Date()) ? 'LLLL' : 'LLLL yyyy', {\n    locale: locale\n  })), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return onCurrentMonthChange(addMonths(currentMonth, 1));\n    },\n    className: \"rc-cursor-pointer\"\n  }, \"Next\"));\n};\n\nvar daysInWeek = function daysInWeek(_ref) {\n  var _locale$localize, _locale$localize2, _locale$localize3, _locale$localize4, _locale$localize5, _locale$localize6, _locale$localize7;\n\n  var _ref$locale = _ref.locale,\n      locale = _ref$locale === void 0 ? enUS : _ref$locale;\n  return [{\n    day: 0,\n    label: (_locale$localize = locale.localize) == null ? void 0 : _locale$localize.day(0)\n  }, {\n    day: 1,\n    label: (_locale$localize2 = locale.localize) == null ? void 0 : _locale$localize2.day(1)\n  }, {\n    day: 2,\n    label: (_locale$localize3 = locale.localize) == null ? void 0 : _locale$localize3.day(2)\n  }, {\n    day: 3,\n    label: (_locale$localize4 = locale.localize) == null ? void 0 : _locale$localize4.day(3)\n  }, {\n    day: 4,\n    label: (_locale$localize5 = locale.localize) == null ? void 0 : _locale$localize5.day(4)\n  }, {\n    day: 5,\n    label: (_locale$localize6 = locale.localize) == null ? void 0 : _locale$localize6.day(5)\n  }, {\n    day: 6,\n    label: (_locale$localize7 = locale.localize) == null ? void 0 : _locale$localize7.day(6)\n  }];\n};\n\nvar MonthlyBodyContext = /*#__PURE__*/React.createContext({});\n\nfunction useMonthlyBody() {\n  return useContext(MonthlyBodyContext);\n}\n\nvar handleOmittedDays = function handleOmittedDays(_ref) {\n  var days = _ref.days,\n      omitDays = _ref.omitDays,\n      locale = _ref.locale;\n  var headings = daysInWeek({\n    locale: locale\n  });\n  var daysToRender = days; //omit the headings and days of the week that were passed in\n\n  if (omitDays) {\n    headings = daysInWeek({\n      locale: locale\n    }).filter(function (day) {\n      return !omitDays.includes(day.day);\n    });\n    daysToRender = days.filter(function (day) {\n      return !omitDays.includes(getDay(day));\n    });\n  } // omit the padding if an omitted day was before the start of the month\n\n\n  var firstDayOfMonth = getDay(daysToRender[0]);\n\n  if (omitDays) {\n    var subtractOmittedDays = omitDays.filter(function (day) {\n      return day < firstDayOfMonth;\n    }).length;\n    firstDayOfMonth = firstDayOfMonth - subtractOmittedDays;\n  }\n\n  var padding = new Array(firstDayOfMonth).fill(0);\n  return {\n    headings: headings,\n    daysToRender: daysToRender,\n    padding: padding\n  };\n}; //to prevent these from being purged in production, we make a lookup object\n\n\nvar headingClasses = {\n  l3: 'lg:rc-grid-cols-3',\n  l4: 'lg:rc-grid-cols-4',\n  l5: 'lg:rc-grid-cols-5',\n  l6: 'lg:rc-grid-cols-6',\n  l7: 'lg:rc-grid-cols-7'\n};\n\nfunction MonthlyBody(_ref2) {\n  var omitDays = _ref2.omitDays,\n      events = _ref2.events,\n      children = _ref2.children;\n\n  var _useMonthlyCalendar = useMonthlyCalendar(),\n      days = _useMonthlyCalendar.days,\n      locale = _useMonthlyCalendar.locale;\n\n  var _handleOmittedDays = handleOmittedDays({\n    days: days,\n    omitDays: omitDays,\n    locale: locale\n  }),\n      headings = _handleOmittedDays.headings,\n      daysToRender = _handleOmittedDays.daysToRender,\n      padding = _handleOmittedDays.padding;\n\n  var headingClassName = 'rc-border-b-2 rc-p-2 rc-border-r-2 lg:rc-block rc-hidden';\n  return React.createElement(\"div\", {\n    className: \"rc-bg-white rc-border-l-2 rc-border-t-2\"\n  }, React.createElement(\"div\", {\n    className: \"rc-grid rc-grid-cols-1 sm:rc-grid-cols-2 md:rc-grid-cols-4 \" + //@ts-ignore\n    headingClasses[\"l\" + headings.length]\n  }, headings.map(function (day) {\n    return React.createElement(\"div\", {\n      key: day.day,\n      className: headingClassName,\n      \"aria-label\": \"Day of Week\"\n    }, day.label);\n  }), padding.map(function (_, index) {\n    return React.createElement(\"div\", {\n      key: index,\n      className: headingClassName,\n      \"aria-label\": \"Empty Day\"\n    });\n  }), daysToRender.map(function (day) {\n    return React.createElement(MonthlyBodyContext.Provider, {\n      key: day.toISOString(),\n      value: {\n        day: day,\n        events: events.filter(function (data) {\n          return isSameDay(data.date, day);\n        })\n      }\n    }, children);\n  })));\n}\n\nfunction MonthlyDay(_ref3) {\n  var renderDay = _ref3.renderDay;\n\n  var _useMonthlyCalendar2 = useMonthlyCalendar(),\n      locale = _useMonthlyCalendar2.locale;\n\n  var _useMonthlyBody = useMonthlyBody(),\n      day = _useMonthlyBody.day,\n      events = _useMonthlyBody.events;\n\n  var dayNumber = format(day, 'd', {\n    locale: locale\n  });\n  return React.createElement(\"div\", {\n    \"aria-label\": \"Events for day \" + dayNumber,\n    className: \"rc-h-48 rc-p-2 rc-border-b-2 rc-border-r-2\"\n  }, React.createElement(\"div\", {\n    className: \"rc-flex rc-justify-between\"\n  }, React.createElement(\"div\", {\n    className: \"rc-font-bold\"\n  }, dayNumber), React.createElement(\"div\", {\n    className: \"lg:rc-hidden rc-block\"\n  }, format(day, 'EEEE', {\n    locale: locale\n  }))), React.createElement(\"ul\", {\n    className: \"rc-divide-gray-200 rc-divide-y rc-overflow-hidden rc-max-h-36 rc-overflow-y-auto\"\n  }, renderDay(events)));\n}\n\nvar DefaultMonthlyEventItem = function DefaultMonthlyEventItem(_ref) {\n  var title = _ref.title,\n      date = _ref.date;\n  return React.createElement(\"li\", {\n    className: \"rc-py-2\"\n  }, React.createElement(\"div\", {\n    className: \"rc-flex rc-text-sm rc-flex-1 rc-justify-between\"\n  }, React.createElement(\"h3\", {\n    className: \"rc-font-medium\"\n  }, title), React.createElement(\"p\", {\n    className: \"rc-text-gray-500\"\n  }, date)));\n};\n\nvar WeeklyContext = /*#__PURE__*/React.createContext({});\n\nvar useWeeklyCalendar = function useWeeklyCalendar() {\n  return useContext(WeeklyContext);\n};\n\nvar WeeklyCalendar = function WeeklyCalendar(_ref) {\n  var locale = _ref.locale,\n      week = _ref.week,\n      children = _ref.children;\n\n  var _useState = useState(),\n      selectedDay = _useState[0],\n      setSelectedDay = _useState[1]; //clear the selected day if the week changes\n\n\n  useEffect(function () {\n    setSelectedDay(undefined);\n  }, [week]);\n  return React.createElement(WeeklyContext.Provider, {\n    value: {\n      locale: locale,\n      selectedDay: selectedDay,\n      week: startOfWeek(week),\n      changeSelectedDay: setSelectedDay\n    }\n  }, children);\n};\n\nvar WeeklyContainer = function WeeklyContainer(_ref2) {\n  var children = _ref2.children;\n  return React.createElement(\"div\", {\n    className: \"md:rc-flex md:rc-justify-between\"\n  }, children);\n};\n\nvar DayButton = function DayButton(_ref3) {\n  var day = _ref3.day;\n\n  var _useWeeklyCalendar = useWeeklyCalendar(),\n      locale = _useWeeklyCalendar.locale,\n      week = _useWeeklyCalendar.week,\n      selectedDay = _useWeeklyCalendar.selectedDay,\n      changeSelectedDay = _useWeeklyCalendar.changeSelectedDay;\n\n  var isSelected = selectedDay ? getDay(selectedDay) === day.day : false;\n  var currentDate = setDay(week, day.day, {\n    locale: locale\n  });\n  return React.createElement(\"li\", {\n    onClick: function onClick() {\n      return changeSelectedDay(isSelected ? undefined : currentDate);\n    },\n    className: \"rc-bg-white rc-cursor-pointer\",\n    \"aria-label\": \"Day of Week\"\n  }, React.createElement(\"div\", {\n    className: \"rc-rounded-lg rc-border sm:rc-w-36 rc-text-center rc-py-4 \" + (isSelected ? 'rc-border-indigo-600' : 'rc-border-gray-300 hover:rc-border-gray-500')\n  }, React.createElement(\"p\", {\n    className: \"rc-font-medium rc-text-sm rc-text-gray-800\"\n  }, day.label, \" \", format(currentDate, 'do', {\n    locale: locale\n  }))));\n};\n\nvar WeeklyDays = function WeeklyDays(_ref4) {\n  var omitDays = _ref4.omitDays;\n\n  var _useWeeklyCalendar2 = useWeeklyCalendar(),\n      locale = _useWeeklyCalendar2.locale;\n\n  var daysToRender = daysInWeek({\n    locale: locale\n  });\n\n  if (omitDays) {\n    daysToRender = daysInWeek({\n      locale: locale\n    }).filter(function (day) {\n      return !omitDays.includes(day.day);\n    });\n  }\n\n  return React.createElement(\"ul\", {\n    className: \"rc-grid md:rc-grid-cols-1 rc-grid-cols-2 rc-gap-2\"\n  }, daysToRender.map(function (day) {\n    return React.createElement(DayButton, {\n      key: day.day,\n      day: day\n    });\n  }));\n};\n\nfunction WeeklyBody(_ref5) {\n  var events = _ref5.events,\n      renderItem = _ref5.renderItem,\n      style = _ref5.style;\n\n  var _useWeeklyCalendar3 = useWeeklyCalendar(),\n      week = _useWeeklyCalendar3.week,\n      selectedDay = _useWeeklyCalendar3.selectedDay;\n\n  return React.createElement(\"div\", {\n    className: \"rc-overflow-auto rc-max-h-96\",\n    style: style\n  }, React.createElement(\"ul\", {\n    className: \"rc-divide-y rc-divide-gray-200 \"\n  }, events.map(function (item) {\n    // If they select a single day, filter out events for different days\n    if (selectedDay) {\n      if (!isSameDay(selectedDay, item.date)) return null;\n    } //if an event is for a different week, filter it out\n\n\n    if (!isSameWeek(week, item.date)) return null; //return the remeaining events!\n\n    return renderItem({\n      item: item,\n      showingFullWeek: selectedDay === undefined\n    });\n  })));\n}\n\nvar WeeklyResponsiveContainer = function WeeklyResponsiveContainer(_ref6) {\n  var children = _ref6.children;\n  return React.createElement(\"div\", {\n    className: \"rc-border rc-p-4 md:rc-w-3/4 lg:rc-w-1/2 rc-w-full\"\n  }, children);\n};\n\nvar DefaultWeeklyEventItem = function DefaultWeeklyEventItem(_ref) {\n  var title = _ref.title,\n      date = _ref.date;\n  return React.createElement(\"li\", {\n    className: \"rc-py-4 rc-w-72\"\n  }, React.createElement(\"div\", {\n    className: \"rc-text-sm rc-flex rc-justify-between\"\n  }, React.createElement(\"h3\", {\n    className: \"rc-font-medium\"\n  }, title), React.createElement(\"p\", {\n    className: \"rc-text-gray-500\"\n  }, date)));\n};\n\nexport { DefaultMonthlyEventItem, DefaultWeeklyEventItem, MonthlyBody, MonthlyCalendar, MonthlyDay, MonthlyNav, WeeklyBody, WeeklyCalendar, WeeklyContainer, WeeklyDays, WeeklyResponsiveContainer, handleOmittedDays, useMonthlyBody, useMonthlyCalendar, useWeeklyCalendar };","map":{"version":3,"sources":["/home/cognitensor/Desktop/Personal/Rekor/Front/node_modules/@zach.codes/react-calendar/src/Monthly/MonthlyCalendar.tsx","/home/cognitensor/Desktop/Personal/Rekor/Front/node_modules/@zach.codes/react-calendar/src/shared.ts","/home/cognitensor/Desktop/Personal/Rekor/Front/node_modules/@zach.codes/react-calendar/src/Monthly/MonthlyBody.tsx","/home/cognitensor/Desktop/Personal/Rekor/Front/node_modules/@zach.codes/react-calendar/src/Monthly/MonthlyEventItems.tsx","/home/cognitensor/Desktop/Personal/Rekor/Front/node_modules/@zach.codes/react-calendar/src/Weekly/WeeklyCalendar.tsx","/home/cognitensor/Desktop/Personal/Rekor/Front/node_modules/@zach.codes/react-calendar/src/Weekly/WeeklyEventItems.tsx"],"names":["MonthlyCalendarContext","React","useMonthlyCalendar","useContext","MonthlyCalendar","locale","currentMonth","onCurrentMonthChange","children","monthStart","startOfMonth","days","eachDayOfInterval","start","end","endOfMonth","value","MonthlyNav","className","onClick","subMonths","format","getYear","addMonths","daysInWeek","day","label","MonthlyBodyContext","useMonthlyBody","handleOmittedDays","omitDays","headings","daysToRender","getDay","firstDayOfMonth","subtractOmittedDays","padding","headingClasses","l3","l4","l5","l6","l7","MonthlyBody","events","headingClassName","key","index","isSameDay","data","MonthlyDay","renderDay","dayNumber","DefaultMonthlyEventItem","title","date","WeeklyContext","useWeeklyCalendar","WeeklyCalendar","week","selectedDay","setSelectedDay","useState","useEffect","startOfWeek","changeSelectedDay","WeeklyContainer","DayButton","isSelected","currentDate","setDay","WeeklyDays","WeeklyBody","renderItem","style","item","isSameWeek","showingFullWeek","undefined","WeeklyResponsiveContainer","DefaultWeeklyEventItem"],"mappings":"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","sourcesContent":["import {\n  eachDayOfInterval,\n  startOfMonth,\n  endOfMonth,\n  format,\n  subMonths,\n  addMonths,\n  getYear,\n} from 'date-fns';\nimport React, { ReactNode, useContext } from 'react';\n\ntype CalendarState = {\n  days: Date[];\n  currentMonth: Date;\n  locale?: Locale;\n  onCurrentMonthChange: (date: Date) => any;\n};\n\nconst MonthlyCalendarContext = React.createContext<CalendarState>(\n  {} as CalendarState\n);\n\nexport const useMonthlyCalendar = () => useContext(MonthlyCalendarContext);\n\ntype Props = {\n  locale?: Locale;\n  children: ReactNode;\n  currentMonth: Date;\n  onCurrentMonthChange: (date: Date) => any;\n};\n\nexport const MonthlyCalendar = ({\n  locale,\n  currentMonth,\n  onCurrentMonthChange,\n  children,\n}: Props) => {\n  let monthStart = startOfMonth(currentMonth);\n  let days = eachDayOfInterval({\n    start: monthStart,\n    end: endOfMonth(monthStart),\n  });\n\n  return (\n    <MonthlyCalendarContext.Provider\n      value={{\n        days,\n        locale,\n        onCurrentMonthChange,\n        currentMonth: monthStart,\n      }}\n    >\n      {children}\n    </MonthlyCalendarContext.Provider>\n  );\n};\n\nexport const MonthlyNav = () => {\n  let { locale, currentMonth, onCurrentMonthChange } = useMonthlyCalendar();\n\n  return (\n    <div className=\"rc-flex rc-justify-end rc-mb-4\">\n      <button\n        onClick={() => onCurrentMonthChange(subMonths(currentMonth, 1))}\n        className=\"rc-cursor-pointer\"\n      >\n        Previous\n      </button>\n      <div\n        className=\"rc-ml-4 rc-mr-4 rc-w-32 rc-text-center\"\n        aria-label=\"Current Month\"\n      >\n        {format(\n          currentMonth,\n          getYear(currentMonth) === getYear(new Date()) ? 'LLLL' : 'LLLL yyyy',\n          { locale }\n        )}\n      </div>\n      <button\n        onClick={() => onCurrentMonthChange(addMonths(currentMonth, 1))}\n        className=\"rc-cursor-pointer\"\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n","import { Locale } from 'date-fns';\nimport { enUS } from 'date-fns/locale';\n\ntype DaysInWeekProps = {\n  locale?: Locale;\n};\n\nexport const daysInWeek = ({ locale = enUS }: DaysInWeekProps) => [\n  { day: 0, label: locale.localize?.day(0) },\n  { day: 1, label: locale.localize?.day(1) },\n  { day: 2, label: locale.localize?.day(2) },\n  { day: 3, label: locale.localize?.day(3) },\n  { day: 4, label: locale.localize?.day(4) },\n  { day: 5, label: locale.localize?.day(5) },\n  { day: 6, label: locale.localize?.day(6) },\n];\n","import React, { ReactNode, useContext } from 'react';\nimport { useMonthlyCalendar } from './MonthlyCalendar';\nimport { daysInWeek } from '../shared';\nimport { format, getDay, isSameDay, Locale } from 'date-fns';\n\nconst MonthlyBodyContext = React.createContext({} as any);\ntype BodyState<DayData> = {\n  day: Date;\n  events: DayData[];\n};\n\nexport function useMonthlyBody<DayData>() {\n  return useContext<BodyState<DayData>>(MonthlyBodyContext);\n}\n\ntype OmittedDaysProps = {\n  days: Date[];\n  omitDays?: number[];\n  locale?: Locale;\n};\n\nexport const handleOmittedDays = ({\n  days,\n  omitDays,\n  locale,\n}: OmittedDaysProps) => {\n  let headings = daysInWeek({ locale });\n  let daysToRender = days;\n\n  //omit the headings and days of the week that were passed in\n  if (omitDays) {\n    headings = daysInWeek({ locale }).filter(\n      day => !omitDays.includes(day.day)\n    );\n    daysToRender = days.filter(day => !omitDays.includes(getDay(day)));\n  }\n\n  // omit the padding if an omitted day was before the start of the month\n  let firstDayOfMonth = getDay(daysToRender[0]) as number;\n  if (omitDays) {\n    let subtractOmittedDays = omitDays.filter(day => day < firstDayOfMonth)\n      .length;\n    firstDayOfMonth = firstDayOfMonth - subtractOmittedDays;\n  }\n  let padding = new Array(firstDayOfMonth).fill(0);\n\n  return { headings, daysToRender, padding };\n};\n\n//to prevent these from being purged in production, we make a lookup object\nconst headingClasses = {\n  l3: 'lg:rc-grid-cols-3',\n  l4: 'lg:rc-grid-cols-4',\n  l5: 'lg:rc-grid-cols-5',\n  l6: 'lg:rc-grid-cols-6',\n  l7: 'lg:rc-grid-cols-7',\n};\n\ntype MonthlyBodyProps<DayData> = {\n  /*\n    skip days, an array of days, starts at sunday (0), saturday is 6\n    ex: [0,6] would remove sunday and saturday from rendering\n  */\n  omitDays?: number[];\n  events: (DayData & { date: Date })[];\n  children: ReactNode;\n};\n\nexport function MonthlyBody<DayData>({\n  omitDays,\n  events,\n  children,\n}: MonthlyBodyProps<DayData>) {\n  let { days, locale } = useMonthlyCalendar();\n  let { headings, daysToRender, padding } = handleOmittedDays({\n    days,\n    omitDays,\n    locale,\n  });\n\n  let headingClassName =\n    'rc-border-b-2 rc-p-2 rc-border-r-2 lg:rc-block rc-hidden';\n  return (\n    <div className=\"rc-bg-white rc-border-l-2 rc-border-t-2\">\n      <div\n        className={`rc-grid rc-grid-cols-1 sm:rc-grid-cols-2 md:rc-grid-cols-4 ${\n          //@ts-ignore\n          headingClasses[`l${headings.length}`]\n        }`}\n      >\n        {headings.map(day => (\n          <div\n            key={day.day}\n            className={headingClassName}\n            aria-label=\"Day of Week\"\n          >\n            {day.label}\n          </div>\n        ))}\n        {padding.map((_, index) => (\n          <div\n            key={index}\n            className={headingClassName}\n            aria-label=\"Empty Day\"\n          />\n        ))}\n        {daysToRender.map(day => (\n          <MonthlyBodyContext.Provider\n            key={day.toISOString()}\n            value={{\n              day,\n              events: events.filter(data => isSameDay(data.date, day)),\n            }}\n          >\n            {children}\n          </MonthlyBodyContext.Provider>\n        ))}\n      </div>\n    </div>\n  );\n}\n\ntype MonthlyDayProps<DayData> = {\n  renderDay: (events: DayData[]) => ReactNode;\n};\nexport function MonthlyDay<DayData>({ renderDay }: MonthlyDayProps<DayData>) {\n  let { locale } = useMonthlyCalendar();\n  let { day, events } = useMonthlyBody<DayData>();\n  let dayNumber = format(day, 'd', { locale });\n\n  return (\n    <div\n      aria-label={`Events for day ${dayNumber}`}\n      className=\"rc-h-48 rc-p-2 rc-border-b-2 rc-border-r-2\"\n    >\n      <div className=\"rc-flex rc-justify-between\">\n        <div className=\"rc-font-bold\">{dayNumber}</div>\n        <div className=\"lg:rc-hidden rc-block\">\n          {format(day, 'EEEE', { locale })}\n        </div>\n      </div>\n      <ul className=\"rc-divide-gray-200 rc-divide-y rc-overflow-hidden rc-max-h-36 rc-overflow-y-auto\">\n        {renderDay(events)}\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\n\n/*\n  Over time there may be more useful event item components that can be included\n  in the library\n*/\n\ntype DefaultEventItemProps = {\n  title: string;\n  date: string;\n};\n\nexport const DefaultMonthlyEventItem = ({\n  title,\n  date,\n}: DefaultEventItemProps) => {\n  return (\n    <li className=\"rc-py-2\">\n      <div className=\"rc-flex rc-text-sm rc-flex-1 rc-justify-between\">\n        <h3 className=\"rc-font-medium\">{title}</h3>\n        <p className=\"rc-text-gray-500\">{date}</p>\n      </div>\n    </li>\n  );\n};\n","import {\n  startOfWeek,\n  format,\n  isSameDay,\n  getDay,\n  setDay,\n  isSameWeek,\n} from 'date-fns';\nimport React, {\n  CSSProperties,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { daysInWeek } from '../shared';\n\ntype State = {\n  week: Date;\n  selectedDay?: Date;\n  locale?: Locale;\n  changeSelectedDay: (day?: Date) => any;\n};\n\nconst WeeklyContext = React.createContext<State>({} as State);\nexport const useWeeklyCalendar = () => useContext(WeeklyContext);\n\ntype WeeklyCalendarProps = {\n  week: Date;\n  children: ReactNode;\n  locale?: Locale;\n};\n\nexport const WeeklyCalendar = ({\n  locale,\n  week,\n  children,\n}: WeeklyCalendarProps) => {\n  let [selectedDay, setSelectedDay] = useState<Date>();\n\n  //clear the selected day if the week changes\n  useEffect(() => {\n    setSelectedDay(undefined);\n  }, [week]);\n\n  return (\n    <WeeklyContext.Provider\n      value={{\n        locale,\n        selectedDay,\n        week: startOfWeek(week),\n        changeSelectedDay: setSelectedDay,\n      }}\n    >\n      {children}\n    </WeeklyContext.Provider>\n  );\n};\n\ntype WeeklyContainerProps = {\n  children: ReactNode;\n};\nexport const WeeklyContainer = ({ children }: WeeklyContainerProps) => {\n  return <div className=\"md:rc-flex md:rc-justify-between\">{children}</div>;\n};\n\ntype DayButtonProps = {\n  day: { day: number; label: string };\n};\n\nconst DayButton = ({ day }: DayButtonProps) => {\n  let { locale, week, selectedDay, changeSelectedDay } = useWeeklyCalendar();\n  let isSelected = selectedDay ? getDay(selectedDay) === day.day : false;\n  let currentDate = setDay(week, day.day, { locale });\n  return (\n    <li\n      onClick={() => changeSelectedDay(isSelected ? undefined : currentDate)}\n      className=\"rc-bg-white rc-cursor-pointer\"\n      aria-label=\"Day of Week\"\n    >\n      <div\n        className={`rc-rounded-lg rc-border sm:rc-w-36 rc-text-center rc-py-4 ${\n          isSelected\n            ? 'rc-border-indigo-600'\n            : 'rc-border-gray-300 hover:rc-border-gray-500'\n        }`}\n      >\n        <p className=\"rc-font-medium rc-text-sm rc-text-gray-800\">\n          {day.label} {format(currentDate, 'do', { locale })}\n        </p>\n      </div>\n    </li>\n  );\n};\n\ntype WeeklyDaysProps = {\n  omitDays?: number[];\n};\n\nexport const WeeklyDays = ({ omitDays }: WeeklyDaysProps) => {\n  let { locale } = useWeeklyCalendar();\n  let daysToRender = daysInWeek({ locale });\n\n  if (omitDays) {\n    daysToRender = daysInWeek({ locale }).filter(\n      day => !omitDays.includes(day.day)\n    );\n  }\n  return (\n    <ul className=\"rc-grid md:rc-grid-cols-1 rc-grid-cols-2 rc-gap-2\">\n      {daysToRender.map(day => (\n        <DayButton key={day.day} day={day} />\n      ))}\n    </ul>\n  );\n};\n\ntype RenderItemProps<EventItem> = {\n  item: EventItem & { date: Date };\n  /*\n    boolean indicating if a full week is being shwown\n    vs having a single day selected\n  */\n  showingFullWeek: boolean;\n};\n\ntype WeeklyBodyProps<EventItem> = {\n  style?: CSSProperties;\n  events: (EventItem & { date: Date })[];\n  renderItem: (item: RenderItemProps<EventItem>) => ReactNode;\n};\n\nexport function WeeklyBody<EventItem>({\n  events,\n  renderItem,\n  style,\n}: WeeklyBodyProps<EventItem>) {\n  let { week, selectedDay } = useWeeklyCalendar();\n  return (\n    <div className=\"rc-overflow-auto rc-max-h-96\" style={style}>\n      <ul className=\"rc-divide-y rc-divide-gray-200 \">\n        {events.map(item => {\n          // If they select a single day, filter out events for different days\n          if (selectedDay) {\n            if (!isSameDay(selectedDay, item.date)) return null;\n          }\n          //if an event is for a different week, filter it out\n          if (!isSameWeek(week, item.date)) return null;\n\n          //return the remeaining events!\n          return renderItem({\n            item,\n            showingFullWeek: selectedDay === undefined,\n          });\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport const WeeklyResponsiveContainer = ({\n  children,\n}: {\n  children: ReactNode;\n}) => {\n  return (\n    <div className=\"rc-border rc-p-4 md:rc-w-3/4 lg:rc-w-1/2 rc-w-full\">\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\n\n/*\n  Over time there may be more useful event item components that can be included\n  in the library\n*/\n\ntype DefaultWeeklyEventItemProps = {\n  title: string;\n  date: string;\n};\n\nexport const DefaultWeeklyEventItem = ({\n  title,\n  date,\n}: DefaultWeeklyEventItemProps) => {\n  return (\n    <li className=\"rc-py-4 rc-w-72\">\n      <div className=\"rc-text-sm rc-flex rc-justify-between\">\n        <h3 className=\"rc-font-medium\">{title}</h3>\n        <p className=\"rc-text-gray-500\">{date}</p>\n      </div>\n    </li>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}