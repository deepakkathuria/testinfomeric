{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _lib = require(\"../../lib\");\n\nvar _Checkbox = _interopRequireDefault(require(\"../../modules/Checkbox\"));\n/**\n * A Radio is sugar for <Checkbox radio />.\n * Useful for exclusive groups of sliders or toggles.\n * @see Checkbox\n * @see Form\n */\n\n\nfunction Radio(props) {\n  var slider = props.slider,\n      toggle = props.toggle,\n      type = props.type;\n  var rest = (0, _lib.getUnhandledProps)(Radio, props); // const ElementType = getElementType(Radio, props)\n  // radio, slider, toggle are exclusive\n  // use an undefined radio if slider or toggle are present\n\n  var radio = !(slider || toggle) || undefined;\n  return _react[\"default\"].createElement(_Checkbox[\"default\"], (0, _extends2[\"default\"])({}, rest, {\n    type: type,\n    radio: radio,\n    slider: slider,\n    toggle: toggle\n  }));\n}\n\nRadio.handledProps = [\"slider\", \"toggle\", \"type\"];\nRadio.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Format to emphasize the current selection state. */\n  slider: _Checkbox[\"default\"].propTypes.slider,\n\n  /** Format to show an on or off choice. */\n  toggle: _Checkbox[\"default\"].propTypes.toggle,\n\n  /** HTML input type, either checkbox or radio. */\n  type: _Checkbox[\"default\"].propTypes.type\n} : {};\nRadio.defaultProps = {\n  type: 'radio'\n};\nvar _default = Radio;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/oinfo/rekor_layout/Rekor/Front/node_modules/semantic-ui-react/dist/commonjs/addons/Radio/Radio.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_extends2","_react","_lib","_Checkbox","Radio","props","slider","toggle","type","rest","getUnhandledProps","radio","undefined","createElement","handledProps","propTypes","process","env","NODE_ENV","defaultProps","_default"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,SAAS,GAAGN,sBAAsB,CAACC,OAAO,CAAC,gCAAD,CAAR,CAAtC;;AAEA,IAAIM,MAAM,GAAGP,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,IAAIO,IAAI,GAAGP,OAAO,CAAC,WAAD,CAAlB;;AAEA,IAAIQ,SAAS,GAAGT,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASS,KAAT,CAAeC,KAAf,EAAsB;AACpB,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAAA,MACIC,MAAM,GAAGF,KAAK,CAACE,MADnB;AAAA,MAEIC,IAAI,GAAGH,KAAK,CAACG,IAFjB;AAGA,MAAIC,IAAI,GAAG,CAAC,GAAGP,IAAI,CAACQ,iBAAT,EAA4BN,KAA5B,EAAmCC,KAAnC,CAAX,CAJoB,CAIkC;AACtD;AACA;;AAEA,MAAIM,KAAK,GAAG,EAAEL,MAAM,IAAIC,MAAZ,KAAuBK,SAAnC;AACA,SAAOX,MAAM,CAAC,SAAD,CAAN,CAAkBY,aAAlB,CAAgCV,SAAS,CAAC,SAAD,CAAzC,EAAsD,CAAC,GAAGH,SAAS,CAAC,SAAD,CAAb,EAA0B,EAA1B,EAA8BS,IAA9B,EAAoC;AAC/FD,IAAAA,IAAI,EAAEA,IADyF;AAE/FG,IAAAA,KAAK,EAAEA,KAFwF;AAG/FL,IAAAA,MAAM,EAAEA,MAHuF;AAI/FC,IAAAA,MAAM,EAAEA;AAJuF,GAApC,CAAtD,CAAP;AAMD;;AAEDH,KAAK,CAACU,YAAN,GAAqB,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,CAArB;AACAV,KAAK,CAACW,SAAN,GAAkBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACxD;AACAZ,EAAAA,MAAM,EAAEH,SAAS,CAAC,SAAD,CAAT,CAAqBY,SAArB,CAA+BT,MAFiB;;AAIxD;AACAC,EAAAA,MAAM,EAAEJ,SAAS,CAAC,SAAD,CAAT,CAAqBY,SAArB,CAA+BR,MALiB;;AAOxD;AACAC,EAAAA,IAAI,EAAEL,SAAS,CAAC,SAAD,CAAT,CAAqBY,SAArB,CAA+BP;AARmB,CAAxC,GASd,EATJ;AAUAJ,KAAK,CAACe,YAAN,GAAqB;AACnBX,EAAAA,IAAI,EAAE;AADa,CAArB;AAGA,IAAIY,QAAQ,GAAGhB,KAAf;AACAN,OAAO,CAAC,SAAD,CAAP,GAAqBsB,QAArB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _lib = require(\"../../lib\");\n\nvar _Checkbox = _interopRequireDefault(require(\"../../modules/Checkbox\"));\n\n/**\n * A Radio is sugar for <Checkbox radio />.\n * Useful for exclusive groups of sliders or toggles.\n * @see Checkbox\n * @see Form\n */\nfunction Radio(props) {\n  var slider = props.slider,\n      toggle = props.toggle,\n      type = props.type;\n  var rest = (0, _lib.getUnhandledProps)(Radio, props); // const ElementType = getElementType(Radio, props)\n  // radio, slider, toggle are exclusive\n  // use an undefined radio if slider or toggle are present\n\n  var radio = !(slider || toggle) || undefined;\n  return _react[\"default\"].createElement(_Checkbox[\"default\"], (0, _extends2[\"default\"])({}, rest, {\n    type: type,\n    radio: radio,\n    slider: slider,\n    toggle: toggle\n  }));\n}\n\nRadio.handledProps = [\"slider\", \"toggle\", \"type\"];\nRadio.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Format to emphasize the current selection state. */\n  slider: _Checkbox[\"default\"].propTypes.slider,\n\n  /** Format to show an on or off choice. */\n  toggle: _Checkbox[\"default\"].propTypes.toggle,\n\n  /** HTML input type, either checkbox or radio. */\n  type: _Checkbox[\"default\"].propTypes.type\n} : {};\nRadio.defaultProps = {\n  type: 'radio'\n};\nvar _default = Radio;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}