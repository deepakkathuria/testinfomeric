{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useContext } from \"react\";\nimport { DonutChartContext } from \"./DonutChart\";\n\nfunction coordinates(half, radius, startAngle, endAngle) {\n  const startAngleDegrees = Math.PI * startAngle / 180;\n  const endAngleDegrees = Math.PI * endAngle / 180;\n  return {\n    x1: half + half * radius * Math.cos(startAngleDegrees),\n    y1: half + half * radius * Math.sin(startAngleDegrees),\n    x2: half + half * radius * Math.cos(endAngleDegrees),\n    y2: half + half * radius * Math.sin(endAngleDegrees)\n  };\n}\n\nfunction arc(width, radius, largeArcFlag, x, y) {\n  const z = width / 2 * radius;\n  return `A${z}, ${z} 0 ${largeArcFlag} ${x}, ${y}`;\n}\n\nfunction path(activeAngle, startAngle, width, innerRadius, outerRadius) {\n  const endAngle = startAngle + activeAngle;\n  const largeArcFlagOuter = activeAngle > 180 ? \"1 1\" : \"0 1\";\n  const largeArcFlagInner = activeAngle > 180 ? \"1 0\" : \"0 0\";\n  const half = width / 2;\n  const outerCoords = coordinates(half, outerRadius, startAngle, endAngle);\n  const innerCoords = coordinates(half, innerRadius, startAngle, endAngle);\n  const outerArc = arc(width, outerRadius, largeArcFlagOuter, outerCoords.x2, outerCoords.y2);\n  const innerArc = arc(width, innerRadius, largeArcFlagInner, innerCoords.x1, innerCoords.y1);\n  return `M${outerCoords.x1},${outerCoords.y1}\n  ${outerArc}\n  L${innerCoords.x2},${innerCoords.y2}\n  ${innerArc} z`;\n}\n\nconst ArcPath = _ref => {\n  let {\n    item\n  } = _ref;\n  const {\n    className,\n    emptyOffset,\n    graphWidth,\n    innerRadius,\n    outerRadius,\n    selected,\n    selectedOffset,\n    toggledOffset,\n    toggleSelect,\n    total\n  } = useContext(DonutChartContext);\n  const {\n    angle,\n    classNames,\n    clickHandlers,\n    index,\n    isEmpty,\n    label,\n    value,\n    ...restItemRenderrops\n  } = item;\n  const activeAngle = Number.isNaN(value / total) || total / value === 1 ? 359.99 : value / total * 360;\n  let [inner, outer] = [innerRadius, outerRadius];\n\n  if (isEmpty) {\n    inner += emptyOffset;\n    outer -= emptyOffset;\n  } else if (selected.label === label) {\n    if (toggleSelect) {\n      inner -= toggledOffset;\n      outer += toggledOffset;\n    } else {\n      outer += selectedOffset;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"path\", _extends({}, clickHandlers, restItemRenderrops, {\n    className: `${className}-arcs-path ${classNames}`,\n    d: path(activeAngle, angle, graphWidth, inner, outer)\n  }));\n};\n\nexport default ArcPath;","map":{"version":3,"sources":["/home/cognitensor/Desktop/Personal/Rekor/Front/node_modules/react-donut-chart/dist/ArcPath.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","useContext","DonutChartContext","coordinates","half","radius","startAngle","endAngle","startAngleDegrees","Math","PI","endAngleDegrees","x1","cos","y1","sin","x2","y2","arc","width","largeArcFlag","x","y","z","path","activeAngle","innerRadius","outerRadius","largeArcFlagOuter","largeArcFlagInner","outerCoords","innerCoords","outerArc","innerArc","ArcPath","item","className","emptyOffset","graphWidth","selected","selectedOffset","toggledOffset","toggleSelect","total","angle","classNames","clickHandlers","index","isEmpty","label","value","restItemRenderrops","Number","isNaN","inner","outer","createElement","d"],"mappings":"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","sourcesContent":["function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}import React,{useContext}from\"react\";import{DonutChartContext}from\"./DonutChart\";function coordinates(half,radius,startAngle,endAngle){const startAngleDegrees=Math.PI*startAngle/180;const endAngleDegrees=Math.PI*endAngle/180;return{x1:half+half*radius*Math.cos(startAngleDegrees),y1:half+half*radius*Math.sin(startAngleDegrees),x2:half+half*radius*Math.cos(endAngleDegrees),y2:half+half*radius*Math.sin(endAngleDegrees)}}function arc(width,radius,largeArcFlag,x,y){const z=width/2*radius;return`A${z}, ${z} 0 ${largeArcFlag} ${x}, ${y}`}function path(activeAngle,startAngle,width,innerRadius,outerRadius){const endAngle=startAngle+activeAngle;const largeArcFlagOuter=activeAngle>180?\"1 1\":\"0 1\";const largeArcFlagInner=activeAngle>180?\"1 0\":\"0 0\";const half=width/2;const outerCoords=coordinates(half,outerRadius,startAngle,endAngle);const innerCoords=coordinates(half,innerRadius,startAngle,endAngle);const outerArc=arc(width,outerRadius,largeArcFlagOuter,outerCoords.x2,outerCoords.y2);const innerArc=arc(width,innerRadius,largeArcFlagInner,innerCoords.x1,innerCoords.y1);return`M${outerCoords.x1},${outerCoords.y1}\n  ${outerArc}\n  L${innerCoords.x2},${innerCoords.y2}\n  ${innerArc} z`}const ArcPath=({item})=>{const{className,emptyOffset,graphWidth,innerRadius,outerRadius,selected,selectedOffset,toggledOffset,toggleSelect,total}=useContext(DonutChartContext);const{angle,classNames,clickHandlers,index,isEmpty,label,value,...restItemRenderrops}=item;const activeAngle=Number.isNaN(value/total)||total/value===1?359.99:value/total*360;let[inner,outer]=[innerRadius,outerRadius];if(isEmpty){inner+=emptyOffset;outer-=emptyOffset}else if(selected.label===label){if(toggleSelect){inner-=toggledOffset;outer+=toggledOffset}else{outer+=selectedOffset}}return/*#__PURE__*/React.createElement(\"path\",_extends({},clickHandlers,restItemRenderrops,{className:`${className}-arcs-path ${classNames}`,d:path(activeAngle,angle,graphWidth,inner,outer)}))};export default ArcPath;"]},"metadata":{},"sourceType":"module"}